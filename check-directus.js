// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Directus
const DIRECTUS_URL = 'https://1.cycloscope.online';
const DIRECTUS_TOKEN = '7JeEQ9bKtgX7onxJQZyGu8w8tCziiblV';

async function checkDirectus() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Directus...\n');
    console.log(`URL: ${DIRECTUS_URL}`);
    console.log(`Token: ${DIRECTUS_TOKEN.substring(0, 10)}...\n`);

    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...');
        const serverResponse = await fetch(`${DIRECTUS_URL}/server/info`);
        if (serverResponse.ok) {
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω\n');
        } else {
            console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ owners
        console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ owners...');
        const ownersResponse = await fetch(`${DIRECTUS_URL}/items/owners`, {
            headers: {
                'Authorization': `Bearer ${DIRECTUS_TOKEN}`
            }
        });
        
        if (ownersResponse.ok) {
            const ownersData = await ownersResponse.json();
            console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è owners –¥–æ—Å—Ç—É–ø–Ω–∞ (–∑–∞–ø–∏—Å–µ–π: ${ownersData.data?.length || 0})\n`);
        } else {
            const error = await ownersResponse.text();
            console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ owners: ${ownersResponse.status}`);
            console.log(`   ${error}\n`);
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ projects
        console.log('3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ projects...');
        const projectsResponse = await fetch(`${DIRECTUS_URL}/items/projects`, {
            headers: {
                'Authorization': `Bearer ${DIRECTUS_TOKEN}`
            }
        });
        
        if (projectsResponse.ok) {
            const projectsData = await projectsResponse.json();
            console.log(`‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è projects –¥–æ—Å—Ç—É–ø–Ω–∞ (–∑–∞–ø–∏—Å–µ–π: ${projectsData.data?.length || 0})\n`);
        } else {
            const error = await projectsResponse.text();
            console.log(`‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ projects: ${projectsResponse.status}`);
            console.log(`   ${error}\n`);
        }

        console.log('‚ú® –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
    }
}

checkDirectus();
